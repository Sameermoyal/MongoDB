

//1. Find all books written by a specific author, such as "J.K. Rowling".
db.books.aggregate([
  {$lookUp:{
    from:"authors",
  localFeild:"author_id",
  foreignFeild:"_id",
  as:"ad"
  }},
  {$match : {"ad.name":"J.K. Rowling"}},
  
  ]
)

//2.Find the total number of books in each genre.
db.books.aggregate(
  {$group:{_id:"$genre",total_books:{$sum:1}}}
)

//3. List the names of authors who have written more than 1 book.
db.books.aggregate(
  {$group:{_id:"$genre",total_books:{$sum:1}}},
  {$match:{
    total_books:{gt:1}
  }},
  {$lookUp:{
    from:"authors",
  localFeild:"_id",
  foreignFeild:"_id",
  as:"authorDetails"
  }},{
    $project:{
      "author_name":{$arrayEleAt:["$authorDetails.name",0]},
      book_count:1
    }
  }
)

//5. Find the average publication year of books for each genre.

db.books.aggregate([{$group:{_id:"$genre" , averagebooks:{$avg:"$publication_year"}}}])

//6. List all authors and the total number of books they've written, sorted by the number of books in descending order.
db.authors.aggregate([
  {$lookUp:{
    from:"books",
  localFeild:"_id",
  foreignFeild:"author_id",
  as:"books"
  }},
  {
    $project:{
      name:1,
      total_books:{$size:"$books"}
    }

  }
  {
    $sort:{total_books:-1}
  }
  ])


//7.. List all books published after the year 2000.

db.books.aggregate(
  {$match:{publication_year:{$gt:2000}}},
 
)

//9.. List authors and their total number of books, and exclude authors with no books.

db.authors.aggregate([
  {$lookUp:{
    from:"books",
  localFeild:"_id",
  foreignFeild:"author_id",
  as:"books"
  }},
  {
    $project:{
      name:1,
      total_books:{$size:"$books"}
    }

  }
  {
    $match:{total_books:{$gt:0}}
  }
  ])


//10. Find all books published between 1950 and 2000.
db.books.aggregate(
  {$match:{publication_year:{$gt:1950,$lt:2000}}},
 
)